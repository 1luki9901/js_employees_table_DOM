{"mappings":"ACGA,SAAS,gBAAgB,CAAC,mBAAoB,WAwGnC,IAAA,EAAT,SAA0B,CAAO,CAAE,CAAI,EACrC,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,EACzB,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WACT,EAAa,MAAM,EACrB,EAAG,IACL,EAlHM,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAgB,CAAA,EAChB,EAAc,KAGlB,EAAM,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAtC,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAQ,MAAM,IAAI,CAAC,EAAO,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,GACvD,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAE/C,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAC1C,EAAQ,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,IAAI,GAEhD,OAAO,EACH,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,EAC1B,GACA,EAAgB,CAAC,EACjB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,aAAa,CAAC,SAAS,WAAW,CAAC,E,EACjE,EACF,GAGA,EAAM,gBAAgB,CAAC,YAAY,OAAO,CAAC,SAAC,CAA5C,EACE,EAAI,gBAAgB,CAAC,QAAS,WACxB,GACF,EAAY,SAAS,CAAC,MAAM,CAAC,UAE/B,EAAI,SAAS,CAAC,GAAG,CAAC,UAClB,EAAc,CAChB,EACF,GAuBA,SAAS,IAAI,CAAC,kBAAkB,CAAC,YApBf,g2BAsBlB,IAAM,EAAO,SAAS,aAAa,CAAC,sBAGpC,EAAK,gBAAgB,CAAC,SAAU,SAAC,CAAjC,EACE,EAAM,cAAc,GAGpB,IAAM,EAAO,EAAK,IAAI,CAAC,KAAK,CAAC,IAAI,GAC3B,EAAW,EAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,GACnC,EAAS,EAAK,MAAM,CAAC,KAAK,CAC1B,EAAM,SAAS,EAAK,GAAG,CAAC,KAAK,CAAC,IAAI,GAAI,IACtC,EAAS,WAAW,EAAK,MAAM,CAAC,KAAK,CAAC,IAAI,IAEhD,GAAI,EAAK,MAAM,CAAG,EAAG,CACnB,EAAiB,0CAA2C,SAE5D,MACF,CAEA,GAAI,EAAM,IAAM,EAAM,GAAI,CACxB,EAAiB,gCAAiC,SAElD,MACF,CAEA,IAAM,EAAS,SAAS,aAAa,CAAC,KAEtC,CAAA,EAAO,SAAS,CAAI,eAEZ,MAAA,CADA,EAAK,qBAEL,MAAA,CADA,EAAS,qBAET,MAAA,CADA,EAAO,qBAEP,MAAA,CADA,EAAI,qBACc,MAAA,CAAlB,EAAO,OAAO,CAAC,GAAG,eAE1B,EAAM,aAAa,CAAC,SAAS,WAAW,CAAC,GACzC,EAAiB,8BAA+B,WAEhD,EAAO,gBAAgB,CAAC,QAAS,WAC3B,GACF,EAAY,SAAS,CAAC,MAAM,CAAC,UAE/B,EAAO,SAAS,CAAC,GAAG,CAAC,UACrB,EAAc,CAChB,EACF,EAcF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var showNotification = function showNotification(message, type) {\n        var notification = document.createElement(\"div\");\n        notification.className = type;\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.textContent = message;\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            notification.remove();\n        }, 3000);\n    };\n    var table = document.querySelector(\"table\");\n    var sortDirection = true;\n    var selectedRow = null;\n    // Table sorting\n    table.querySelectorAll(\"th\").forEach(function(header) {\n        header.addEventListener(\"click\", function() {\n            var index = Array.from(header.parentNode.children).indexOf(header);\n            var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n            rows.sort(function(a, b) {\n                var cellA = a.children[index].textContent.trim();\n                var cellB = b.children[index].textContent.trim();\n                return sortDirection ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n            });\n            sortDirection = !sortDirection;\n            rows.forEach(function(row) {\n                return table.querySelector(\"tbody\").appendChild(row);\n            });\n        });\n    });\n    // Row selection\n    table.querySelectorAll(\"tbody tr\").forEach(function(row) {\n        row.addEventListener(\"click\", function() {\n            if (selectedRow) selectedRow.classList.remove(\"active\");\n            row.classList.add(\"active\");\n            selectedRow = row;\n        });\n    });\n    // Add form\n    var formHtml = '\\n    <form class=\"new-employee-form\">\\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n      <label>Office:\\n        <select name=\"office\" data-qa=\"office\">\\n          <option value=\"Tokyo\">Tokyo</option>\\n          <option value=\"Singapore\">Singapore</option>\\n          <option value=\"London\">London</option>\\n          <option value=\"New York\">New York</option>\\n          <option value=\"Edinburgh\">Edinburgh</option>\\n          <option value=\"San Francisco\">San Francisco</option>\\n        </select>\\n      </label>\\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n      <button type=\"submit\">Save to table</button>\\n    </form>\\n  ';\n    document.body.insertAdjacentHTML(\"beforeend\", formHtml);\n    var form = document.querySelector(\".new-employee-form\");\n    // eslint-disable-next-line no-shadow\n    form.addEventListener(\"submit\", function(event) {\n        event.preventDefault();\n        // eslint-disable-next-line no-shadow\n        var name = form.name.value.trim();\n        var position = form.position.value.trim();\n        var office = form.office.value;\n        var age = parseInt(form.age.value.trim(), 10);\n        var salary = parseFloat(form.salary.value.trim());\n        if (name.length < 4) {\n            showNotification(\"Name must be at least 4 characters long\", \"error\");\n            return;\n        }\n        if (age < 18 || age > 90) {\n            showNotification(\"Age must be between 18 and 90\", \"error\");\n            return;\n        }\n        var newRow = document.createElement(\"tr\");\n        newRow.innerHTML = \"\\n      <td>\".concat(name, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>\").concat(salary.toFixed(2), \"</td>\\n    \");\n        table.querySelector(\"tbody\").appendChild(newRow);\n        showNotification(\"Employee added successfully\", \"success\");\n        newRow.addEventListener(\"click\", function() {\n            if (selectedRow) selectedRow.classList.remove(\"active\");\n            newRow.classList.add(\"active\");\n            selectedRow = newRow;\n        });\n    });\n});\n\n//# sourceMappingURL=index.fd638695.js.map\n","'use strict';\n\n// write code here\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  let sortDirection = true;\n  let selectedRow = null;\n\n  // Table sorting\n  table.querySelectorAll('th').forEach((header) => {\n    header.addEventListener('click', () => {\n      const index = Array.from(header.parentNode.children).indexOf(header);\n      const rows = Array.from(table.querySelectorAll('tbody tr'));\n\n      rows.sort((a, b) => {\n        const cellA = a.children[index].textContent.trim();\n        const cellB = b.children[index].textContent.trim();\n\n        return sortDirection\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n      });\n      sortDirection = !sortDirection;\n      rows.forEach((row) => table.querySelector('tbody').appendChild(row));\n    });\n  });\n\n  // Row selection\n  table.querySelectorAll('tbody tr').forEach((row) => {\n    row.addEventListener('click', () => {\n      if (selectedRow) {\n        selectedRow.classList.remove('active');\n      }\n      row.classList.add('active');\n      selectedRow = row;\n    });\n  });\n\n  // Add form\n  const formHtml = `\n    <form class=\"new-employee-form\">\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n      <label>Office:\n        <select name=\"office\" data-qa=\"office\">\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n      <button type=\"submit\">Save to table</button>\n    </form>\n  `;\n\n  document.body.insertAdjacentHTML('beforeend', formHtml);\n\n  const form = document.querySelector('.new-employee-form');\n\n  // eslint-disable-next-line no-shadow\n  form.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line no-shadow\n    const name = form.name.value.trim();\n    const position = form.position.value.trim();\n    const office = form.office.value;\n    const age = parseInt(form.age.value.trim(), 10);\n    const salary = parseFloat(form.salary.value.trim());\n\n    if (name.length < 4) {\n      showNotification('Name must be at least 4 characters long', 'error');\n\n      return;\n    }\n\n    if (age < 18 || age > 90) {\n      showNotification('Age must be between 18 and 90', 'error');\n\n      return;\n    }\n\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n      <td>${name}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${salary.toFixed(2)}</td>\n    `;\n    table.querySelector('tbody').appendChild(newRow);\n    showNotification('Employee added successfully', 'success');\n\n    newRow.addEventListener('click', () => {\n      if (selectedRow) {\n        selectedRow.classList.remove('active');\n      }\n      newRow.classList.add('active');\n      selectedRow = newRow;\n    });\n  });\n\n  function showNotification(message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = type;\n    notification.setAttribute('data-qa', 'notification');\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  }\n});\n"],"names":["document","addEventListener","showNotification","message","type","notification","createElement","className","setAttribute","textContent","body","appendChild","setTimeout","remove","table","querySelector","sortDirection","selectedRow","querySelectorAll","forEach","header","index","Array","from","parentNode","children","indexOf","rows","sort","a","b","cellA","trim","cellB","localeCompare","row","classList","add","insertAdjacentHTML","form","event","preventDefault","name","value","position","office","age","parseInt","salary","parseFloat","length","newRow","innerHTML","concat","toFixed"],"version":3,"file":"index.fd638695.js.map"}